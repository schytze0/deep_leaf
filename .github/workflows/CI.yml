name: CI

on:
  push:
  workflow_dispatch:

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure DVC S3 remote
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/schytze0/deep_leaf.s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Pull the production model and train.tfrecord file
        run: |
          dvc pull models/production_model.keras
          dvc pull data/training/train.tfrecord
          dvc checkout models/production_model.keras
          ls -l ./models  # DEBUG: show content of models/ folder in Git runner
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: Test Model Loading
        run: |
          python tests/test_load_model.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run flake8
        run: |
          flake8 --exclude=.env,.github --max-line-length=120 .
        continue-on-error: true

      - name: Run tests with pytest
        run: |
          pytest --maxfail=1 --disable-warnings -v

      - name: Build Docker image with docker-compose (only fastapi service)
        run: |
          docker compose build fastapi-app

      - name: Launch fastapi container
        run: |
          docker compose up -d fastapi-app
          sleep 10 # wait 10 seconds for container to start

      - name: Check API health 
        run: |
          curl --fail http://localhost:8001/ || (echo "API not responding" && exit 1)

      - name: Stop container
        if: always()
        run: docker compose down
