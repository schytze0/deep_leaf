name: Sync Model Updates

on:
  push:
    branches:
      - dev-yannik
  schedule:
    # This cron schedule runs the workflow every day at 6pm UTC.
    - cron: '0 18 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # ensures full history so branch info is available

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure Git to use PAT
        run: |
          cd ${{ github.workspace }}
          # Rewrite any GitHub URL to embed the PAT, so pushes authenticate properly.
          git config --global url."https://${{ secrets.DEEPLEAF_GITHUB_PAT }}@github.com/".insteadOf "https://github.com/"
          git remote -v

      - name: Configure DVC S3 Remote
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/schytze0/deep_leaf.s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Check if Model Updated
        id: model_check
        run: |
          cd ${{ github.workspace }}
          echo "changed=false" >> $GITHUB_OUTPUT
        #   # Adjust file paths as needed: the model pointer is in models/production_model.keras.dvc
        #   # and metadata in models/metadata.txt.
        #   if git diff --quiet models/production_model.keras.dvc models/metadata.txt; then
        #     echo "changed=false" >> $GITHUB_OUTPUT
        #   else
        #     echo "changed=true" >> $GITHUB_OUTPUT
        #   fi

      - name: Commit and Push Updated DVC Files if Model Updated
        if: steps.model_check.outputs.changed == 'true'
        run: |
          cd ${{ github.workspace }}
          # Set Git user info for the commit.
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add models/production_model.keras.dvc models/metadata.txt
          git commit -m "Sync updated model and metadata from training"
          git push origin ${{ github.ref_name }}

      - name: Push Model File to DVC Remote
        if: steps.model_check.outputs.changed == 'true'
        run: |
          # Push the updated large model file to your DagsHub remote.
          dvc push models/production_model.keras
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
